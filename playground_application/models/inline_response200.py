# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playground_application.models.base_model_ import Model
from playground_application import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first=None, second=None):  # noqa: E501
        """InlineResponse200 - a model defined in OpenAPI

        :param first: The first of this InlineResponse200.  # noqa: E501
        :type first: Dict[str, List[float]]
        :param second: The second of this InlineResponse200.  # noqa: E501
        :type second: Dict[str, List[float]]
        """
        self.openapi_types = {
            'first': Dict[str, List[float]],
            'second': Dict[str, List[float]]
        }

        self.attribute_map = {
            'first': 'first',
            'second': 'second'
        }

        self._first = first
        self._second = second

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self):
        """Gets the first of this InlineResponse200.


        :return: The first of this InlineResponse200.
        :rtype: Dict[str, List[float]]
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this InlineResponse200.


        :param first: The first of this InlineResponse200.
        :type first: Dict[str, List[float]]
        """

        self._first = first

    @property
    def second(self):
        """Gets the second of this InlineResponse200.


        :return: The second of this InlineResponse200.
        :rtype: Dict[str, List[float]]
        """
        return self._second

    @second.setter
    def second(self, second):
        """Sets the second of this InlineResponse200.


        :param second: The second of this InlineResponse200.
        :type second: Dict[str, List[float]]
        """

        self._second = second
