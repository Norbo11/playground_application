# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from playground_application.models.base_model_ import Model
from playground_application import util


class Location(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, x=None, y=None):  # noqa: E501
        """Location - a model defined in OpenAPI

        :param x: The x of this Location.  # noqa: E501
        :type x: int
        :param y: The y of this Location.  # noqa: E501
        :type y: int
        """
        self.openapi_types = {
            'x': int,
            'y': int
        }

        self.attribute_map = {
            'x': 'x',
            'y': 'y'
        }

        self._x = x
        self._y = y

    @classmethod
    def from_dict(cls, dikt) -> 'Location':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Location of this Location.  # noqa: E501
        :rtype: Location
        """
        return util.deserialize_model(dikt, cls)

    @property
    def x(self):
        """Gets the x of this Location.


        :return: The x of this Location.
        :rtype: int
        """
        return self._x

    @x.setter
    def x(self, x):
        """Sets the x of this Location.


        :param x: The x of this Location.
        :type x: int
        """

        self._x = x

    @property
    def y(self):
        """Gets the y of this Location.


        :return: The y of this Location.
        :rtype: int
        """
        return self._y

    @y.setter
    def y(self, y):
        """Sets the y of this Location.


        :param y: The y of this Location.
        :type y: int
        """

        self._y = y
